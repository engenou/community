<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.mapper.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <!-- 动态sql -->
    <sql id="insertSelectiveFields">
        <trim suffixOverrides=",">
            <if test="fromId != null">from_id,</if>
            <if test="toId != null">to_id,</if>
            <if test="conversationId != null">conversation_id,</if>
            <if test="content != null">content,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time</if>
        </trim>
    </sql>

    <!-- 动态sql -->
    <sql id="insertSelectiveValues">
        <trim suffixOverrides=",">
            <if test="fromId != null">#{fromId},</if>
            <if test="toId != null">#{toId},</if>
            <if test="conversationId != null">#{conversationId},</if>
            <if test="content != null">#{content},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </sql>

    <select id="selectConversations" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            SELECT MAX(id)
            FROM message
            WHERE STATUS != 2
            AND from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid)
        from (
            SELECT MAX(id) as maxid FROM message
            WHERE STATUS != 2
            AND from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        WHERE STATUS != 2
        AND from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLettersCount"  resultType="int">
        select count(id)
        from message
        WHERE STATUS != 2
        AND from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLettersUnreadCount" resultType="int">
        select count(id)
        from message
        WHERE STATUS = 0
        AND from_id != 1
        AND to_id = #{userId}
        <if test="conversationId!=null">
            AND conversation_id = #{conversationId}
        </if>
    </select>

    <!-- values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})-->
    <insert id="insertMessage" useGeneratedKeys="true" keyProperty="id" parameterType="com.nowcoder.community.entity.Message">
        insert into message(<include refid="insertSelectiveFields"></include> )
        values(<include refid="insertSelectiveValues"></include>)
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        WHERE id in(
            select max(id) from message
            where status != 2
            and from_id = 1
            and to_id = #{userId}
            and conversation_id = #{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>








</mapper>